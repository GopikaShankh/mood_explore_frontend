{"ast":null,"code":"var _jsxFileName = \"/home/gopika/Documents/mood-explore/mood-explore/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MoodForm from \"./MoodForm\";\nimport Navbar from \"./navbar\";\nimport { jwtDecode } from \"jwt-decode\";\nimport \"./HomePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [moods, setMoods] = useState([]);\n  const fetchMoods = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return;\n    try {\n      const decodedToken = jwtDecode(token);\n      const userId = decodedToken.id;\n      const response = await axios.get(`http://localhost:8080/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMoods(response.data);\n    } catch (error) {\n      console.error(\"Error fetching moods:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchMoods();\n  }, []);\n  const addMood = async mood => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return;\n    try {\n      const decodedToken = jwtDecode(token);\n      const userId = decodedToken.id;\n      const response = await axios.post(\"http://localhost:8080/\", {\n        user_id: userId,\n        mood: mood.mood,\n        message: mood.message\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMoods(prevMoods => [response.data, ...prevMoods]);\n      console.log(\"Mood added:\", response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error adding mood:\", error);\n      const errMsg = (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message || \"An unexpected error occurred.\";\n      alert(errMsg);\n    }\n  };\n  const latestMood = moods.length > 0 ? moods[0] : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"bg\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoodForm, {\n      onAddMood: addMood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), latestMood ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"mood\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Mood: \", latestMood.mood]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Message: \", latestMood.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date: \", new Date(latestMood.date).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Suggestions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"suggestions\",\n            children: (latestMood.suggestions || []).map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: suggestion\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, latestMood._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No mood to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"JVKzjhX8h3SP8t7rweTnWo8V/R0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","MoodForm","Navbar","jwtDecode","jsxDEV","_jsxDEV","Dashboard","_s","moods","setMoods","fetchMoods","token","localStorage","getItem","decodedToken","userId","id","response","get","headers","Authorization","data","error","console","addMood","mood","post","user_id","message","prevMoods","log","_error$response","_error$response$data","errMsg","alert","latestMood","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddMood","className","Date","date","toLocaleString","suggestions","map","suggestion","index","_id","_c","$RefreshReg$"],"sources":["/home/gopika/Documents/mood-explore/mood-explore/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MoodForm from \"./MoodForm\";\nimport Navbar from \"./navbar\";\nimport { jwtDecode } from \"jwt-decode\";\nimport \"./HomePage.css\";\n\nconst Dashboard = () => {\n  const [moods, setMoods] = useState([]);\n\n  const fetchMoods = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return;\n\n    try {\n      const decodedToken = jwtDecode(token);\n      const userId = decodedToken.id;\n\n      const response = await axios.get(`http://localhost:8080/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setMoods(response.data);\n    } catch (error) {\n      console.error(\"Error fetching moods:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchMoods();\n  }, []);\n\n  const addMood = async (mood) => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return;\n\n    try {\n      const decodedToken = jwtDecode(token);\n      const userId = decodedToken.id;\n\n      const response = await axios.post(\n        \"http://localhost:8080/\",\n        {\n          user_id: userId,\n          mood: mood.mood,\n          message: mood.message,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      setMoods((prevMoods) => [response.data, ...prevMoods]);\n      console.log(\"Mood added:\", response.data);\n    } catch (error) {\n      console.error(\"Error adding mood:\", error);\n      const errMsg =\n        error?.response?.data?.error ||\n        error.message ||\n        \"An unexpected error occurred.\";\n      alert(errMsg);\n    }\n  };\n\n  const latestMood = moods.length > 0 ? moods[0] : null;\n\n  return (\n    <div id=\"bg\">\n      <Navbar />\n      <MoodForm onAddMood={addMood} />\n      <div className=\"result-container\">\n        <h2>Current Mood</h2>\n        {latestMood ? (\n          <ul className=\"mood\">\n            <li key={latestMood._id}>\n              <h3>Mood: {latestMood.mood}</h3>\n              <p>Message: {latestMood.message}</p>\n              <p>Date: {new Date(latestMood.date).toLocaleString()}</p>\n              <h4>Suggestions:</h4>\n              <ul className=\"suggestions\">\n                {(latestMood.suggestions || []).map((suggestion, index) => (\n                  <li key={index}>{suggestion}</li>\n                ))}\n              </ul>\n            </li>\n          </ul>\n        ) : (\n          <p>No mood to display</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}